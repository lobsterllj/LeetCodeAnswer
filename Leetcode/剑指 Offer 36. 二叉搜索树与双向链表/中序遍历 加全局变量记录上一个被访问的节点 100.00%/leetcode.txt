/*
// Definition for a Node.
class Node {
    public int val;
    public Node left;
    public Node right;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val,Node _left,Node _right) {
        val = _val;
        left = _left;
        right = _right;
    }
};
*/
class Solution {
    public Node treeToDoublyList(Node root) {
        if (root == null)
            return null;

        Node mid1 = root;
        Node mid2 = root;
        link(root);
        while (mid1.right != null) {
            mid1 = mid1.right;
        }
        while (mid2.left != null) {
            mid2 = mid2.left;
        }

        mid1.right = mid2;
        mid2.left = mid1;
        return mid2;
    }
    public Node pre=null;
    public void link(Node root) {
//        if (root != null)
//            System.out.println(root.val);
        if (root == null)
            return;
        link(root.left);
        if(pre!=null){
            pre.right=root;
            root.left=pre;
        }
        pre=root;
        link(root.right);
    }
}