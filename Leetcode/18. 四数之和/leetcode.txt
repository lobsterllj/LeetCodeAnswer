class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> res = new LinkedList<>();
        if (nums.length < 4)
            return res;

        Arrays.sort(nums);
        int len = nums.length;
        int mid;
        int large;
        for (int j = 0; j < len - 3; ++j) {
            

            if (j > 0 && nums[j] == nums[j - 1])
                continue;
            if (nums[j] + nums[j + 1] + nums[j + 2] + nums[j + 3] > target)
                return res;
            if (nums[j] + nums[len - 1] + nums[len - 2] + nums[len - 3] < target)
                continue;
            for (int i = j + 1; i < len - 2; ++i) {
                if (i > j + 1 && nums[i] == nums[i - 1])
                    continue;

                mid = i + 1;
                large = len - 1;

                while (mid < large) {
                    if (nums[j] + nums[i] + nums[mid] + nums[large] == target) {
                        res.add(Arrays.asList(nums[j], nums[i], nums[mid], nums[large]));
                        mid++;
                        large--;
                        while (nums[mid] == nums[mid - 1] && mid < large) {
                            mid++;
                        }
                        while (nums[large] == nums[large + 1] && mid < large) {
                            large--;
                        }
                    } else if (nums[j] + nums[i] + nums[mid] + nums[large] < target) {
                        mid++;
                    } else {
                        large--;
                    }
                }
            }
        }
        return res;
    }
}