class Solution {
    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {
        if (k == 0)
            return false;
        TreeSet<Long> treeSet = new TreeSet<>();
        for (int i = 0; i < nums.length; ++i) {
            long it = nums[i];
            //找到treeSet中小于等于当前元素it的最大元素
            Long floor = treeSet.floor(it);
            if (floor != null && floor >= it - t)
                return true;

            //找到treeSet中大于等于当前元素it的最小元素
            Long ceiling = treeSet.ceiling(it);
            if (ceiling != null && ceiling <= it + t)
                return true;

            if (treeSet.size() == k)
                treeSet.remove((long) nums[i - k]);
            treeSet.add(it);

        }
        return false;
    }
}