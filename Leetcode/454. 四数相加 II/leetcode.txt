class Solution {
    public int fourSumCount(int[] A, int[] B, int[] C, int[] D) {
        if(A.length==0)
            return 0;
        Arrays.sort(A);
        Arrays.sort(B);
        Arrays.sort(C);
        Arrays.sort(D);
        int len=A.length;
        if(A[0]+B[0]+C[0]+D[0]>0||A[len-1]+B[len-1]+C[len-1]+D[len-1]<0)
            return 0;

        Map<Integer, Integer> AB = new HashMap<>();
        Map<Integer, Integer> CD = new HashMap<>();
        int res=0;

        int cache_ab, cache_cd;
        for (int j = 0; j < A.length; ++j) {
            for (int i = 0; i < B.length; ++i) {
                cache_ab = AB.getOrDefault(A[j] + B[i], 0) + 1;
                AB.put(A[j] + B[i], cache_ab);
            }
        }
        for (int j = 0; j < C.length; ++j) {
            for (int i = 0; i < D.length; ++i) {
                if(AB.containsKey(-(C[i]+D[j])))
                    res+=AB.get(-(C[i]+D[j]));
            }
        }

        return res;
    }
}