/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    static void nodeIn(TreeNode tn, Stack<TreeNode>  st)
    {
        while(tn!=null)
        {
            st.push(tn);
            tn=tn.left;
        }
    }

    static void visit(TreeNode tn, Stack<TreeNode> st,List<Integer> result)
    {
        nodeIn(tn,st);
        TreeNode x;
        while(!st.empty())
        {
            x = st.pop();
            result.add(x.val);
            if (x.right != null) {
                x = x.right;
                nodeIn(x, st);
            }
        }
    }

    public List<Integer> inorderTraversal(TreeNode root) {
        Stack stack=new Stack();
        List<Integer> result=new ArrayList();
        visit(root,stack,result);
        return result;
    }
}