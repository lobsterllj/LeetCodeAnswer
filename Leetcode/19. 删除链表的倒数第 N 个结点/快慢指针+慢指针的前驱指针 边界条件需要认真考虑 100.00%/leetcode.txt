/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head == null)
            return null;

        ListNode fast = head;
        ListNode slow = head;
        ListNode slowPre = new ListNode();
        slowPre.next = slow;

        while (n > 0){
            fast = fast.next;
            n--;
        }

        if (fast == null){
            return head.next;
        }
        
        while(fast != null){
            fast = fast.next;
            slow = slow.next;
            slowPre = slowPre.next;
        }

        slowPre.next = slow.next;
        slow.next = null;

        return head;

    }
}