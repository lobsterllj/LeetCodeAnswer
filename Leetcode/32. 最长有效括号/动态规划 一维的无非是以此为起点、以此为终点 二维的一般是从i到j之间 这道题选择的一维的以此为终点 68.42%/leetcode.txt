class Solution {
    int len;
    char[] chars;
    public int longestValidParentheses(String s) {
        chars = s.toCharArray();
        len = chars.length;
        int res = 0;
        if (len < 2)
            return 0;
        int[] dp = new int[len];
        for (int i = 1; i < len; ++i) {
            if (chars[i] == ')'){
                if (chars[i - 1] == '('){
                    dp[i] = 2;
                    if (i - 2 > 0)
                        dp[i] += dp[i - 2];
                }else{
                    if (i - dp[i - 1] - 1 >= 0 && chars[i - dp[i - 1] - 1] == '('){
                        dp[i] = dp[i - 1] + 2;
                        if (i - dp[i - 1] - 1 > 0){
                            dp[i] += dp[i - dp[i - 1] - 2];
                        }
                    }
                }
                res = Math.max(res, dp[i]);
            }
        }
        return res;

    }
    // public boolean isValid(int i, int j){
    //     return (i >= 0 && i < len && j >= 0 && j < len && chars[i] == '(' && chars[j] == ')');
    // }
}