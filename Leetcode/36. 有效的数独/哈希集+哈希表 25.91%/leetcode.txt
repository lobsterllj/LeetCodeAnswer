class Solution {
    public boolean isValidSudoku(char[][] board) {
        Map<Integer, Set<Integer>> rowSet = new HashMap<>(9);
        Map<Integer, Set<Integer>> colSet = new HashMap<>(9);
        Map<Integer, Set<Integer>> digSet = new HashMap<>(9);
        for (int i = 0; i < 9; ++i){
            rowSet.put(i, new HashSet<>());
            colSet.put(i, new HashSet<>());
            digSet.put(i, new HashSet<>());
        }
        for (int row = 0; row < 9; ++row){
            for (int col = 0; col < 9; ++col){
                if (board[row][col] == '.')
                    continue;
                int temp = board[row][col] - '0';
                int dig = getdig(row, col);
                if (rowSet.get(row).contains(temp) || colSet.get(col).contains(temp) || digSet.get(dig).contains(temp))
                    return false;
                rowSet.get(row).add(temp);
                colSet.get(col).add(temp);
                digSet.get(dig).add(temp);
            }
        }
        return true;
    }
    public int getdig(int row, int col){
        if (row < 3){
            if (col < 3){
                return 0;
            }else if(col < 6){
                return 1;
            }else{
                return 2;            
            }
        }else if(row < 6){
            if (col < 3){
                return 3;
            }else if(col < 6){
                return 4;
            }else{
                return 5;
            }
        }else{
            if (col < 3){
                return 6;
            }else if(col < 6){
                return 7;
            }else{
                return 8;
            }
        }
    }
}