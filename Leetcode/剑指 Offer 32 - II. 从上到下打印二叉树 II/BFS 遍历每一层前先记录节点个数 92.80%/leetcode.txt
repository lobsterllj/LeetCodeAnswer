/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> res=new ArrayList<>();
        if(root==null)
            return res;

        Deque<TreeNode> unvisited=new LinkedList<>();
        unvisited.addLast(root);
        while(!unvisited.isEmpty()){
            List<Integer> temp=new LinkedList<>();
            for(int i=unvisited.size();i>0;--i){
                TreeNode cache=unvisited.pollFirst();
                temp.add(cache.val);
                if(cache.left!=null)
                    unvisited.addLast(cache.left);
                if(cache.right!=null)
                    unvisited.addLast(cache.right);
            }
            res.add(temp);
        }

        return res;
    }
}