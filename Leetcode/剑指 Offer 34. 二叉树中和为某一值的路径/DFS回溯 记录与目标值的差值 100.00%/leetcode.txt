/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> res = new ArrayList<>();
        if (root == null)
            return res;
        List<Integer> cache = new ArrayList<>();
        search(res, cache, sum, root);
        return res;
    }

    public void search(List<List<Integer>> res, List<Integer> cache, int sum, TreeNode root) {

        if ( root == null)
            return;
//        System.out.println("root: "+root.val);
//        System.out.println("ex:" + cache);
//        System.out.println("sum: "+sum);
        sum -= root.val;
        cache.add(root.val);
        if (sum == 0 && root.left == null && root.right == null) {
            List<Integer> temp = new ArrayList<>(cache);
            cache.remove(cache.size() - 1);
            res.add(temp);
            return;
        }

        search(res, cache, sum, root.left);
        search(res, cache, sum, root.right);
        cache.remove(cache.size() - 1);
    }
}